// <auto-generated />
using System;
using BloodTransfusionBank.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloodTransfusionBank.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221130114313_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloodTransfusionBankShared.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DonationCenterId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonationCenterId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            DonationCenterId = 1,
                            Duration = 30,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 5, 9, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            DonationCenterId = 1,
                            Duration = 30,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BloodTransfusionBankShared.DonationCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DonationCenters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "201 Main St",
                            City = "New York",
                            Description = "Donation Center is a health facility where you can schedule appointment to donate blood. In order to be able to donate blood you have to complete the survey first and also make sure your last bloodd donation was at least six months ago.",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/3/3d/Hartford_Hospital_main_entrance.JPG",
                            Name = "Donation Center 1",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 2,
                            Address = "15 Maple St",
                            City = "New York",
                            Description = "Donation Center is a health facility where you can schedule appointment to donate blood. In order to be able to donate blood you have to complete the survey first and also make sure your last bloodd donation was at least six months ago.",
                            Image = "https://i0.wp.com/ctnewsjunkie.com/wp-content/uploads/2020/12/UConn_Health_Center_wikipedia_720x540_720_540_99_sha-100.jpg?fit=720%2C540&ssl=1",
                            Name = "Donation Center 2",
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 3,
                            Address = "201 Main St",
                            City = "New York",
                            Description = "Donation Center is a health facility where you can schedule appointment to donate blood. In order to be able to donate blood you have to complete the survey first and also make sure your last bloodd donation was at least six months ago.",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/3/3d/Hartford_Hospital_main_entrance.JPG",
                            Name = "Donation Center 33",
                            Rating = 4.0999999999999996
                        });
                });

            modelBuilder.Entity("BloodTransfusionBankShared.Appointment", b =>
                {
                    b.HasOne("BloodTransfusionBankShared.DonationCenter", null)
                        .WithMany("Appointments")
                        .HasForeignKey("DonationCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BloodTransfusionBankShared.DonationCenter", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
